import cotfd;
class AllDiffFC extends UserConstraint<CP> {
    var<CP>{int}[]   _x;    

    AllDiffFC(var<CP>{int}[] x) : UserConstraint<CP>(){
        _x =  x;
    }

    Outcome<CP> post(Consistency<CP> cl){

        forall(i in _x.getRange()){
            if(!_x[i].bound()){
               _x[i].addAC5Bind(this);
        }
        return Suspend;
         
    }

    Outcome<CP> valBind(var<CP>{int} z, int val)
    {

      forall(k in _x.getRange() : z.getId()!=_x[k].getId() )
      {
          if(_x[k].removeValue(val) == Failure) return Failure;
      }
      return Suspend;
         

    }
    
}
